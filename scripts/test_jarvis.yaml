test_pushbullet_file:
  sequence:
    service: notify.pushbullet
    data:
      title: test_pushbullet_file
      message: Test File
      target:
        - "device/Tod's iPhone"
        - email/tschmidty@yahoo.com
      data:
        file: /tmp/tv_check_doc.jpg

test_pushbullet_note:
  sequence:
    service: notify.pushbullet
    data:
      title: test_pushbullet_note
      message: Test Note
      target:
        - "device/Tod's iPhone"
        - email/tschmidty@yahoo.com

test_pushbullet_note_email:
  sequence:
    service: notify.pushbullet
    data:
      title: test_pushbullet_note_email
      message: Test Note
      target: email/tschmidty@yahoo.com

test_pushbullet_list:
  sequence:
    service: notify.pushbullet
    data:
      title: test_pushbullet_list
      message: Test List
      data:
        list:
          - item1
          - item2

test_pushbullet_template_list:
  sequence:
    service: notify.pushbullet
    data_template:
      title: test_pushbullet_template_list
      message: Test Template List
      data:
        list:
          - "{{ alternative | default('item3') }}"
          - "{{ alternative | default('item4') }}"

test_jarvis:
  sequence:
    - event: JARVIS_SAY
      event_data:
        text: 'OK, I am alive'

test_jarvis_timer:
  sequence:
    - service: script.set_timer
      data_template:
        name: "turkey"
        hours: 0
        minutes: 1
        seconds: 5
    - service: mqtt.publish
      data_template:
        topic: '{{ world | default("not_world") }}'

test_jarvis_notify:
  sequence:
    - event: JARVIS_NOTIFY
      event_data_template:
        text: 'Yes, I am still here'

test_jarvis_query:
  sequence:
    - event: JARVIS_QUERY
      event_data_template:
        text: 'The garage door is open, would you like me to close it?'

test_jarvis_response:
  sequence:
    - event: JARVIS_RESPONSE
      event_data_template:
        text: 'OK, I closed the garage door'

test_jarvis_playlist:
  sequence:
    - event: JARVIS_PLAYLIST
      event_data_template:
        playlist:
          "{{ alternative | default('christmas') }}"

test_jarvis_artist:
  sequence:
    - event: JARVIS_ARTIST
      event_data_template:
        artist: 'John Legend'
        title: 'All of Me'

test_jarvis_song:
  sequence:
    - event: JARVIS_SONG
      event_data_template:
        artist: 'John Legend'
        title: 'All of Me'

test_jarvis_get_coffee_state:
  sequence:
    - service: mqtt.publish
      data:
        topic: "jarvis/coffeeIn/getState"
        payload: 1

test_jarvis_coffee_on:
  sequence:
    - service: mqtt.publish
      data:
        topic: "jarvis/coffeeOut/getState"
    # - condition: state
    #   entity_id: 'sensor.coffee_power'
    #   state: '0'
    - service: mqtt.publish
      data:
        topic: "jarvis/coffeeIn/turnOn"
    - event: JARVIS_SAY
      event_data:
        text: 'OK, turning the coffee maker on'
    - service: mqtt.publish
      data:
        topic: "jarvis/coffeeIn/getState"
        payload: 1

test_jarvis_coffee_off:
  sequence:
    - service: mqtt.publish
      data:
        topic: "jarvis/coffeeOut/getState"
    #- condition: state
    #   entity_id: 'sensor.coffee_power'
    #   state: '1'
    - service: mqtt.publish
      data:
        topic: "jarvis/coffeeIn/turnOn"
    - event: JARVIS_SAY
      event_data:
        text: 'OK, turning the coffee maker off'
    - service: mqtt.publish
      data:
        topic: "jarvis/coffeeIn/getState"
        payload: 1

test_jarvis_say_coffee_brew_large:
  sequence:
    - event: JARVIS_SAY
      event_data_template:
        text: 'OK, brewing coffee'
    - service: mqtt.publish
      data:
        topic: "jarvis/coffeeIn/brewLarge"
        payload: 1


test_jarvis_say_coffee_brew_small:
  sequence:
    - event: JARVIS_SAY
      event_data_template:
        text: 'OK, brewing coffee'
    - service: mqtt.publish
      data:
        topic: "jarvis/coffeeIn/brewSmall"
        payload: 1
